;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(def STATEMENTS {})


(defn print-help
   []
   (println "help me..."))

(defn add-statement
   [statement statement-key]
   (def STATEMENTS (assoc STATEMENTS statement-key (array-map :statement statement)))
)

(defn remove-statement
   [statement-key]
   (def STATEMENTS (dissoc STATEMENTS statement-key)))


(defn list-statement
   []
   (println (str "Printing All Statements(" (count STATEMENTS) "):"))
   (println STATEMENTS))


(defn display-statement
   [statement-key]
   (println (statement-key STATEMENTS)))

;; 1. esper statement functions

(defn esper
   "esper main function"

   ([:add statement]
     (add-statement statement (keyword (quot (System/currentTimeMillis) 1000))))

   ([:add statement statement statement-key]
     (add-statement statement statement-key))           

   ([:remove statement]
     (remove-statement statement-name))

   ([:list ]
     (list-statement))

   ([:display statement]
     (display-statement statement-name))

   ([]
     (print-help)))

